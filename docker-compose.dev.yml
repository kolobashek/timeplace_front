version: '3.8'

services:
  mongo:
    image: mongo
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports: 
      - 27017:27017
    networks:
      - mynetwork

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    networks:
      - mynetwork
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    depends_on:
      - mongo

  tp-back:
    image: kolobashek/backend-server
    build: 
      context: ../timeplace_back/
      dockerfile: Dockerfile
    command: yarn start:debug
    restart: always
    ports:
      - 3000:3000
    volumes:
      # - backdata:/usr/src/app
      - ../timeplace_back:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - mynetwork
    depends_on:
      - mongo

  tp-front:
    image: kolobashek/frontend-server
    build: 
      context: .
      dockerfile: Dockerfile.dev
    command: yarn start
    # restart: always
    stdin_open: true
    ports:
      - 80:3005
    volumes:
      # - frontdata:/usr/src/app
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - mynetwork
    # depends_on:
    #   - tp-back

volumes:
  mongodata:
#   nodemodules-back:
#   nodemodules-front:

networks:
  mynetwork:
